<?php

namespace UNAM\AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Grupo
 *
 * @ORM\Table(name="grupos")
 * @ORM\Entity(repositoryClass="UNAM\AppBundle\Repository\GrupoRepository")
 */
class Grupo
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    
    /**
     * @var integer
     *
     * @ORM\Column(name="grupo", type="string", length=30)
     */
    private $grupo;
    
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="fecha_inicio", type="datetime")
     */
    private $fechaInicio;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="fecha_fin", type="datetime")
     */
    private $fechaFin;

    /**
     * @var string
     *
     * @ORM\Column(name="descripcion", type="string", length=150)
     */
    private $descripcion;

    /**
     * @var string
     *
     * @ORM\Column(name="horario", type="string", length=150)
     */
    private $horario;
    
    /**
     * @ORM\ManyToOne(targetEntity="Curso", inversedBy="grupos")
     * @ORM\JoinColumn(name="curso_id", referencedColumnName="id")
     */
    protected $curso;
    
    /**
     * @ORM\OneToMany(targetEntity="Pago", mappedBy="grupo")
     */
    protected $pagos;
    
    /**
     * @ORM\OneToMany(targetEntity="Asistencia", mappedBy="grupo")
     */
    protected $asistencias;
    
    /**
     * @ORM\OneToMany(targetEntity="Calificacion", mappedBy="grupo")
     */
    protected $calificaciones;
    
    /**
     * @ORM\ManyToOne(targetEntity="Maestro", inversedBy="grupos")
     * @ORM\JoinColumn(name="maestro_id", referencedColumnName="id")
     */
    protected $maestro;
    
    /**
     * @var \Booolean
     *
     * @ORM\Column(name="is_active", type="boolean",nullable=true)
     */
    private $isActive = true;
    
   
    public function __toString() {
        return $this->getNombreGrupoCompleto();
    }
    
    public function getNombreGrupoCompleto(){
        return "Grupo: ".$this->grupo." (".$this->fechaInicio->format('d-m-Y').")";
    }
    
    static public $sHorario=array(
        '07:00:00'=>'07:00 am',
        '07:30:00'=>'07:30 am',
        '08:00:00'=>'08:00 am',
        '08:30:00'=>'08:30 am',
        '09:00:00'=>'09:00 am',
        '09:30:00'=>'09:30 am',
        '10:00:00'=>'10:00 am',
        '10:30:00'=>'10:30 am',
        '11:00:00'=>'11:00 am',
        '11:30:00'=>'11:30 am',
        '12:00:00'=>'12:00 am',
        '12:30:00'=>'12:30 am',
        '13:00:00'=>'01:00 pm',
        '13:30:00'=>'01:30 pm',
        '14:00:00'=>'02:00 pm',
        '14:30:00'=>'02:30 pm',
        '15:00:00'=>'03:00 pm',
        '15:30:00'=>'03:30 pm',
        '16:00:00'=>'04:00 pm',
        '16:30:00'=>'04:30 pm',
        '17:00:00'=>'05:00 pm',
        '17:30:00'=>'05:30 pm',
        '18:00:00'=>'06:00 pm',
        '18:30:00'=>'06:30 pm',
        '19:00:00'=>'07:00 pm',
        '19:30:00'=>'07:30 pm',
        '20:00:00'=>'08:00 pm',
        '20:30:00'=>'08:30 pm',
        '21:00:00'=>'09:00 pm',
        '21:30:00'=>'09:30 pm',
        '22:00:00'=>'10:00 pm',
    );
    
    public function getStringHorario(){
        return self::$sHorario[$this->getHorario()];
    }
    
    static function getArrayHorarios(){
        return self::$sHorario;
    }
    
    static function getPreferedHorario(){
        return array('07:00:00');
    }
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->pagos = new ArrayCollection();
        $this->asistencias = new ArrayCollection();
        $this->calificaciones = new ArrayCollection();
        $this->isActive = true;
    }
}
